plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

loom {
    // This is the project's Minecraft version. For example: "1.21.5"
    // See https://fabricmc.net/develop/build/ for more information.
    // If you plan to update Minecraft versions, you will need to change this.
    minecraft "1.21.5"
    // The official yarn mappings for the selected Minecraft version.
    // See https://fabricmc.net/develop/build/ for more information.
    // These include Mojang's official method and field names.
    mappings "net.fabricmc:yarn:1.21.5+build.1" // Updated to 1.21.5 mappings
    // Add Fabric API as a dependency.
    // See https://fabricmc.net/develop/build/ for more information.
    // If you plan to update Minecraft versions, you will need to change this.
    modMenu {
        // Automatically create a ModMenu entry if this is a client-side mod.
        // Set to true to automatically create a ModMenu entry for your mod.
        // Set to false to disable this feature.
        enabled = false
    }
}

repositories {
    // Add any additional repositories to here
    // Maven repository for Fabric API.
    maven {
        url "https://maven.fabricmc.net/"
    }
    // Maven repository for ModMenu.
    maven {
        url "https://maven.shedaniel.me/"
    }
}

dependencies {
    // To change the versions of dependencies, see the `gradle.properties` file.
    minecraft "com.mojang:minecraft:1.21.5" // Updated to 1.21.5
    mappings "net.fabricmc:yarn:1.21.5+build.1" // Updated to 1.21.5 mappings
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(17)
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
